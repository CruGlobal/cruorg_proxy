error_log syslog:server=unix:/var/log/nginx/error.sock;

lua_shared_dict redirects 10m;
lua_shared_dict targets 10m;
# lua_code_cache off;

# Set real ip if request forwarded from VPC (vpc-dc2d9fb9) CIDR
set_real_ip_from 10.16.0.0/16;
real_ip_header X-Forwarded-For;
real_ip_recursive on;

#handle the X-Forwarded-Proto header
map $http_x_forwarded_proto $myscheme {
    default $scheme;
    http http;
    https https;
}

upstream puma {
    # Path to Puma SOCK file
    server unix:/opt/puma/sockets/puma.sock;
    keepalive 16;
}

# Add www to non-www host and redirect to HTTPS
server {
    listen 80;
    server_name cru.org;
    access_log syslog:server=unix:/var/log/nginx/access.sock;
    return 301 https://www.cru.org$request_uri;
}

server {
    listen 443 ssl;
    server_name cru.org;
    ssl on;
    ssl_certificate /usr/local/openresty/nginx/cert/cru.self.crt;
    ssl_certificate_key /usr/local/openresty/nginx/cert/cru.self.key;
    ssl_protocols TLSv1.1 TLSv1.2;
    access_log syslog:server=unix:/var/log/nginx/access.sock;
    return 301 https://www.cru.org$request_uri;
}

server {
    listen 80;
    server_name www.familylife.com www-stage.familylife.com

    pagespeed unplugged;

    access_log syslog:server=unix:/var/log/nginx/access.sock;

    # Enforce SSL
    if ($myscheme = "http") {
        return 301 https://$host$request_uri;
	  }

    include /usr/local/openresty/nginx/conf/location_familylife.conf;
    include /usr/local/openresty/nginx/conf/location.conf;
}

server {
    listen 443 ssl;
    server_name www.familylife.com www-stage.familylife.com

    pagespeed unplugged;

    ssl on;
    ssl_certificate /usr/local/openresty/nginx/cert/cru.self.crt;
    ssl_certificate_key /usr/local/openresty/nginx/cert/cru.self.key;
    ssl_protocols TLSv1.1 TLSv1.2;

    access_log syslog:server=unix:/var/log/nginx/access.sock;

    include /usr/local/openresty/nginx/conf/location_familylife.conf;
    include /usr/local/openresty/nginx/conf/location.conf;
}

server {
    listen 80 default_server;

    access_log syslog:server=unix:/var/log/nginx/access.sock;

    # Enforce SSL
    if ($myscheme = "http") {
        return 301 https://$host$request_uri;
	  }

    include /usr/local/openresty/nginx/conf/location.conf;
}

server {
    listen 443 ssl default_server;
    ssl on;
    ssl_certificate /usr/local/openresty/nginx/cert/cru.self.crt;
    ssl_certificate_key /usr/local/openresty/nginx/cert/cru.self.key;
    ssl_protocols TLSv1.1 TLSv1.2;

    access_log syslog:server=unix:/var/log/nginx/access.sock;

    include /usr/local/openresty/nginx/conf/location.conf;
}
